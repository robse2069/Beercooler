<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.10 on linux)" generated="20210927 09:21:08.309" rpa="false">
<suite id="s1" name="Systemtest" source="/home/robert/projects/Github/Beercooler/Tests/Systemtest.robot">
<test id="s1-t1" name="RQ-1.1.1. Activate Cooling">
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>-10</arg>
</arguments>
<msg timestamp="20210927 09:21:18.750" level="INFO">temperature set to 80</msg>
<status status="PASS" starttime="20210927 09:21:13.478" endtime="20210927 09:21:18.751"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210927 09:21:18.752" endtime="20210927 09:21:19.754"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:21:20.756" level="INFO">Cooler Signal = b'0'</msg>
<status status="PASS" starttime="20210927 09:21:19.754" endtime="20210927 09:21:20.757"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20210927 09:21:20.759" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:21:20.758" endtime="20210927 09:21:20.759"></status>
</kw>
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210927 09:21:20.962" level="INFO">temperature set to 100</msg>
<status status="PASS" starttime="20210927 09:21:20.760" endtime="20210927 09:21:20.962"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210927 09:21:20.963" endtime="20210927 09:24:41.042"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:24:42.047" level="INFO">Cooler Signal = b'1'</msg>
<status status="PASS" starttime="20210927 09:24:41.043" endtime="20210927 09:24:42.048"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20210927 09:24:42.050" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:24:42.049" endtime="20210927 09:24:42.050"></status>
</kw>
<doc>Temperature Range: -10째C to +10째C</doc>
<status status="PASS" starttime="20210927 09:21:13.477" endtime="20210927 09:24:42.051" critical="yes"></status>
</test>
<test id="s1-t2" name="RQ-1.1.2. Deactivate Cooling">
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210927 09:24:47.327" level="INFO">temperature set to 100</msg>
<status status="PASS" starttime="20210927 09:24:42.056" endtime="20210927 09:24:47.328"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210927 09:24:47.328" endtime="20210927 09:28:07.422"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:28:08.425" level="INFO">Cooler Signal = b'1'</msg>
<status status="PASS" starttime="20210927 09:28:07.423" endtime="20210927 09:28:08.426"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20210927 09:28:08.427" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:28:08.426" endtime="20210927 09:28:08.428"></status>
</kw>
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>-10</arg>
</arguments>
<msg timestamp="20210927 09:28:08.629" level="INFO">temperature set to 80</msg>
<status status="PASS" starttime="20210927 09:28:08.428" endtime="20210927 09:28:08.630"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210927 09:28:08.631" endtime="20210927 09:28:09.634"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:28:10.637" level="INFO">Cooler Signal = b'0'</msg>
<status status="PASS" starttime="20210927 09:28:09.635" endtime="20210927 09:28:10.637"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20210927 09:28:10.638" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:28:10.637" endtime="20210927 09:28:10.638"></status>
</kw>
<doc>Temperature Range: -10째C to +10째C</doc>
<status status="PASS" starttime="20210927 09:24:42.055" endtime="20210927 09:28:10.638" critical="yes"></status>
</test>
<test id="s1-t3" name="RQ-1.1.4. Compressor Equalization time">
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210927 09:28:15.920" level="INFO">temperature set to 100</msg>
<status status="PASS" starttime="20210927 09:28:10.643" endtime="20210927 09:28:15.920"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210927 09:28:15.921" endtime="20210927 09:31:36.021"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:31:37.024" level="INFO">Cooler Signal = b'1'</msg>
<status status="PASS" starttime="20210927 09:31:36.022" endtime="20210927 09:31:37.024"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20210927 09:31:37.026" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:31:37.025" endtime="20210927 09:31:37.026"></status>
</kw>
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>-10</arg>
</arguments>
<msg timestamp="20210927 09:31:37.229" level="INFO">temperature set to 80</msg>
<status status="PASS" starttime="20210927 09:31:37.027" endtime="20210927 09:31:37.229"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210927 09:31:37.230" endtime="20210927 09:31:38.233"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:31:39.236" level="INFO">Cooler Signal = b'0'</msg>
<status status="PASS" starttime="20210927 09:31:38.234" endtime="20210927 09:31:39.237"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20210927 09:31:39.238" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:31:39.237" endtime="20210927 09:31:39.239"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>90</arg>
</arguments>
<status status="PASS" starttime="20210927 09:31:39.239" endtime="20210927 09:33:09.327"></status>
</kw>
<kw name="Set Temperature" library="Zapfenkuehler_Testlib">
<arguments>
<arg>20</arg>
</arguments>
<msg timestamp="20210927 09:33:09.530" level="INFO">temperature set to 110</msg>
<status status="PASS" starttime="20210927 09:33:09.328" endtime="20210927 09:33:09.531"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210927 09:33:09.531" endtime="20210927 09:33:10.534"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:33:11.537" level="INFO">Cooler Signal = b'0'</msg>
<status status="PASS" starttime="20210927 09:33:10.535" endtime="20210927 09:33:11.537"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20210927 09:33:11.539" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:33:11.538" endtime="20210927 09:33:11.540"></status>
</kw>
<kw name="Wait Seconds" library="Zapfenkuehler_Testlib">
<arguments>
<arg>15</arg>
</arguments>
<status status="PASS" starttime="20210927 09:33:11.540" endtime="20210927 09:33:26.555"></status>
</kw>
<kw name="Get Cooler Output" library="Zapfenkuehler_Testlib">
<msg timestamp="20210927 09:33:27.558" level="INFO">Cooler Signal = b'1'</msg>
<status status="PASS" starttime="20210927 09:33:26.556" endtime="20210927 09:33:27.559"></status>
</kw>
<kw name="Result Should Be" library="Zapfenkuehler_Testlib">
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20210927 09:33:27.560" level="INFO">Result as expected</msg>
<status status="PASS" starttime="20210927 09:33:27.560" endtime="20210927 09:33:27.561"></status>
</kw>
<doc>System shall equalize its pressure for more than 90 seconds</doc>
<status status="PASS" starttime="20210927 09:28:10.642" endtime="20210927 09:33:27.562" critical="yes"></status>
</test>
<doc>Requirements based system test of Beercooler</doc>
<status status="PASS" starttime="20210927 09:21:08.311" endtime="20210927 09:33:27.569"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Systemtest">Systemtest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
